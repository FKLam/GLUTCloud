<Xml>
	<ShaderProgram>
		<VertexShader>
			<Uniform>
				<unif name="g_Pos" type="float4" count="1"/>
				<unif name="g_WH" type="float4" count="1"/>
				<unif name="_OutMatrix" type="mat4" count="1"/>
			</Uniform>
			<Attribute>
				<attrib name="position" semantic="position" index="0"/>
	      <attrib name="texcoord" semantic="texcoord" index="0"/>
      </Attribute>
      <Code>
        <![CDATA[
          uniform vec4 g_Pos;
		  uniform vec4 g_WH;
          uniform mat4 _OutMatrix;
					attribute vec3 position;
					attribute vec2 texcoord;

			  	varying vec2 outTexcoord;

					void main()
					{
						vec4 _Pos = _OutMatrix * vec4(g_Pos.x, g_Pos.y, g_Pos.z, 1.0);
                        _Pos *= 1.0/_Pos.w;
						gl_Position = vec4(position.x*g_WH.x+_Pos.x, position.y*g_WH.y+_Pos.y, _Pos.z, 1.0);
						outTexcoord.x = texcoord.x;
                        outTexcoord.y = texcoord.y;
					}
        ]]>
      </Code>
		</VertexShader>
		<PixelShader>
    	<Uniform>
		  	<unif name="_OverColor" type="float4" count="1"/>
      </Uniform>
      <Texture>
        <tex name="diffuseSampler" index="0"/>
	    </Texture>
      <Code>
		  	<![CDATA[
                precision mediump float;
					uniform vec4 _OverColor;
					uniform sampler2D diffuseSampler;

					varying vec2 outTexcoord;

					void main()
					{
						vec4 texColor = texture2D(diffuseSampler, vec2(outTexcoord.x,outTexcoord.y) );
            					gl_FragColor = texColor * _OverColor;
					}
		  	]]>
        </Code>
      </PixelShader>
    </ShaderProgram>
  </Xml>